<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- Interface의 메서드를 통해 실행할 쿼리 정의 -->
	<select id="selectAll" resultType="EmpVO">
		SELECT   employee_id,
		         last_name,
		         email,
		         hire_date,
		         job_id,
		         salary
		FROM     employees
		ORDER BY employee_id
	</select>
	
	<select id="selectInfo" parameterType="EmpVO" resultType="EmpVO">
		SELECT employee_id
		       , last_name
		       , email
		       , hire_date
		       , job_id
		       , salary
		FROM   employees
		WHERE  employee_id = #{employeeId}
	</select>
	
	<insert id="insertInfo" parameterType="EmpVO"> <!-- insert의 resultType은 지정하지 않는 경우가 많다, 임의로 지정하는것이 불가능하기 때문이다 -->
		<selectKey keyProperty="employeeId" resultType="Integer" order="BEFORE"> <!-- selectKey의 결과는 무조건 parameterType --> <!-- before는 selectKey의 sql문이 먼저 돌고 insert의 sql문이 돈다. after는 insert의 sql문이 돌고, selectKey의 sql문이 돈다 -->
			SELECT NVL(MAX(employee_id), 100) + 1
			FROM   employees
		</selectKey>
		INSERT INTO employees
				(
					employee_id
				    , last_name
				    , email
				    , hire_date
				    , job_id
				    <if test="salary > 0">
				    , salary
				    </if>
				)
				VALUES
				(
					#{employeeId}
				    , #{lastName}
				    , #{email}
				    , sysdate
				    , #{jobId} 
				    <if test="salary > 0">
				    , #{salary}
				    </if>
				)
	</insert>
	
	<update id="updateInfo">
	UPDATE employees
	SET	   last_name = #{info.lastName}
		   , email = #{info.email}
		   , salary = #{info.salary}
	WHERE  employee_id = #{id}
	</update>
	
	<delete id="deleteInfo" parameterType="int">
	DELETE FROM employees
	WHERE employee_id = #{eid}
	</delete>
</mapper>
